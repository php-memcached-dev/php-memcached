[memcached]
; Use session locking
; valid values: On, Off
; the default is On
;memcached.sess_locking = On

; The minimum time, in milliseconds, to wait between session lock attempts.
; This value is double on each lock retry until memcached.sess_lock_wait_max
; is reached, after which any further retries will take sess_lock_wait_max seconds.
; Default is 1000.
;memcached.sess_lock_wait_min = 1000;

; The maximum time, in milliseconds, to wait between session lock attempts.
; Default is 2000.
;memcached.sess_lock_wait_max = 2000;

; The number of times to retry locking the session lock, not including the first attempt.
; Default is 5.
;memcached.sess_lock_retries = 5;

; The time, in seconds, before a lock should release itself.
; Setting to 0 results in the default behaviour, which is to
; use PHP's max_execution_time.
;memcached.sess_lock_expire = 0;

; memcached session key prefix
; valid values are strings less than 219 bytes long
; the default value is "memc.sess.key."
;memcached.sess_prefix = "memc.sess.key."

; Whether or not to re-use the memcached connections corresponding to the value(s)
; of session.save_path after the execution of the script ends.
; Don't use this if certain settings (e.g. SASL settings, sess_binary_protocol) would
; be overridden between requests.
; Default is Off.
;memcached.sess_persistent = Off

; memcached session consistent hash mode
; if set to On, consistent hashing (libketama) is used
; for session handling.
; When consistent hashing is used, one can add or remove cache
; node(s) without messing up too much with existing keys
; default is On
;memcached.sess_consistent_hash = On

; memcached session consistent hash type
; if set to 'ketama', consistent hashing (libketama) is used
; for session handling (default for php-memcached 3.x)
; if set to 'ketama_weighted', weighted consistent hashing (libketama) is used
; for session handling (default for php-memcached 2.x)
;memcached.sess_consistent_hash_type = "ketama"

; Allow failed memcached server to automatically be removed.
; Default is Off. (In previous versions, this setting was called memcached.sess_remove_failed)
;memcached.sess_remove_failed_servers = Off

; Set this value to enable the server be removed after
; configured number of continuous times connection failure.
;memcached.sess_server_failure_limit = 0

; Write data to a number of additional memcached servers
; This is "poor man's HA" as libmemcached calls it.
; If this value is positive and sess_remove_failed is enabled
; when a memcached server fails the session will continue to be available
; from a replica. However, if the failed memcache server
; becomes available again it will read the session from there
; which could have old data or no data at all
;memcached.sess_number_of_replicas = 0

; Use the memcached binary protocol for memcached sessions (Instead of the text protocol)
; libmemcached replicas work only if binary mode is enabled.
; However, certain proxies (such as twemproxy) will work only if the binary protocol is disabled.
; In older versions of php-memcached, this setting was Off and was called memcached.sess_binary.
; Default is On with libmemcached 1.0.18 or newer.
; Default is Off with older version.
;memcached.sess_binary_protocol = On

; memcached session replica read randomize
;memcached.sess_randomize_replica_read = Off

; memcached connect timeout value
; In non-blocking mode this changes the value of the timeout
; during socket connection in milliseconds. Specifying -1 means an infinite timeout.
;memcached.sess_connect_timeout = 1000

; Session SASL username
; Both username and password need to be set for SASL to be enabled
; In addition to this memcached.use_sasl needs to be on
;memcached.sess_sasl_username = NULL

; Session SASL password
;memcached.sess_sasl_password = NULL

; Set the compression type
; valid values are: fastlz, zlib
; the default is fastlz
;memcached.compression_type = "fastlz"

; Compression factor
; Store compressed value only if the compression
; factor (saving) exceeds the set limit.
;
;  store compressed if:
;    plain_len > comp_len * factor
;
; the default value is 1.3 (23% space saving)
;memcached.compression_factor = "1.3"

; The compression threshold
;
; Do not compress serialized values below this threshold.
; the default is 2000 bytes
;memcached.compression_threshold = 2000

; Set the default serializer for new memcached objects.
; valid values are: php, igbinary, json, json_array, msgpack
;
; json - standard php JSON encoding. This serializer
;        is fast and compact but only works on UTF-8
;        encoded data and does not fully implement
;        serializing. See the JSON extension.
; json_array - as json, but decodes into arrays
; php - the standard php serializer
; igbinary - a binary serializer
; msgpack - a cross-language binary serializer
;
; The default is igbinary if available, then msgpack if available, then php otherwise.
;memcached.serializer = "igbinary"

; The amount of retries for failed store commands.
; This mechanism allows transparent fail-over to secondary servers when
; set/increment/decrement/setMulti operations fail on the desired server in a multi-server
; environment.
; the default is 2
;memcached.store_retry_count = 2

; Sets the default for consistent hashing for new connections.
; (To configure consistent hashing for session connections,
; use memcached.sess_consistent_hash instead)
;
; If set to On, consistent hashing (libketama) is used
; for session handling.
; When consistent hashing is used, one can add or remove cache
; node(s) without messing up too much with existing keys
; default is Off
;memcached.default_consistent_hash = Off

; Sets the default memcached protocol for new connections.
; (To configure the memcached protocol for connections used by sessions,
; use memcached.sess_binary_protocol instead)
;
; If set to On, the memcached binary protocol is used by default.
; If set to Off, the memcached text protocol is used.
; Default is Off
;memcached.default_binary_protocol = Off

; Sets the default memcached connection timeout for new connections.
; (To configure the memcached connection timeout for sessions,
; use memcached.sess_connect_timeout instead)
; In non-blocking mode this changes the value of the timeout.
; during socket connection in milliseconds. Specifying -1 means an infinite timeout.
; Specifying 0 means using the memcached library's default connection timeout.
; Default is 0.
;memcached.default_connect_timeout = 0
